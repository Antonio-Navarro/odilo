package com.antoniojnavarro.pruebaodilo.controllers;

import java.util.List;
import java.util.Map;

import org.modelmapper.ModelMapper;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;

import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import javax.validation.Valid;

import com.antoniojnavarro.pruebaodilo.controllers.core.BaseRestController;
import com.antoniojnavarro.pruebaodilo.models.dto.ToDoDto;
import com.antoniojnavarro.pruebaodilo.models.entities.ToDo;
import com.antoniojnavarro.pruebaodilo.services.commons.ToDoService;
import com.antoniojnavarro.pruebaodilo.services.exceptions.ServicioException;
import com.sun.tools.javac.comp.Todo;

@RestController
@RequestMapping(value = "/pruebaodilo/tests/2", consumes = MediaType.APPLICATION_JSON_VALUE, produces = MediaType.APPLICATION_JSON_VALUE)
public class ToDoRestController implements BaseRestController<ToDo, ToDoDto> {

	@Autowired
	private ToDoService toDoService;

	@Autowired
	private ModelMapper modelMapper;

	@PostMapping("")
	@ResponseBody
	public ResponseEntity<ToDo> create(@Valid @RequestBody ToDo item) throws InterruptedException {

		return new ResponseEntity<>("Tareas paradas con exito", HttpStatus.OK);

	}

	@GetMapping("")
	public ResponseEntity<List<ToDo>> getAll(@RequestParam(required = false) Boolean estado) {

		if (estado != null) {
			return new ResponseEntity<>(toDoService.getByStatus(estado), HttpStatus.OK);
		} else {
			return new ResponseEntity<>(toDoService.getAll(), HttpStatus.OK);
		}
	}

	@GetMapping("/user/{userId}")
	public ResponseEntity<List<ToDo>> getToDoByUserId(@PathVariable("userId") Integer userId) {
		return new ResponseEntity<>(toDoService.getByUserId(userId), HttpStatus.OK);
	}

	@GetMapping("/stats")
	public ResponseEntity<Map<Boolean, Long>> getStats() {
		return new ResponseEntity<>(toDoService.getStats(), HttpStatus.OK);
	}

	@GetMapping("/titles")
	public ResponseEntity<List<String>> getTitles() {
		return new ResponseEntity<>(toDoService.getTitles(), HttpStatus.OK);
	}

	@Override
	public ToDoDto parseEntityToDto(ToDo entity) throws ServicioException {
		return modelMapper.map(entity, ToDoDto.class);
	}

	@Override
	public ToDo parseDtoToEntity(ToDoDto dto) throws ServicioException {
		return modelMapper.map(dto, ToDo.class);
	}

}
